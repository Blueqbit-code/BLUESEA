{"ast":null,"code":"import axios from 'axios';\n\n// Base API URL\nconst API_BASE_URL = 'http://localhost:5000/api/auth';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// User Registration\nexport const registerUser = async userData => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/register`, userData, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Registration failed.\";\n  }\n};\n\n// User Login\nexport const loginUser = async userData => {\n  try {\n    const response = await api.post('/login', userData);\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || 'Login failed';\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","registerUser","userData","response","post","data","error","_error$response","_error$response$data","loginUser","_error$response2"],"sources":["C:/Users/Arrigo/Desktop/BLUESEA/BLUESEA/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Base API URL\r\nconst API_BASE_URL = 'http://localhost:5000/api/auth';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// User Registration\r\nexport const registerUser = async (userData) => {\r\n  try {\r\n    const response = await axios.post(`${API_BASE_URL}/register`, userData, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data?.error || \"Registration failed.\";\r\n  }\r\n};\r\n\r\n// User Login\r\nexport const loginUser = async (userData) => {\r\n  try {\r\n    const response = await api.post('/login', userData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || 'Login failed';\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,YAAY,GAAG,gCAAgC;AAErD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,GAAGR,YAAY,WAAW,EAAEM,QAAQ,EAAE;MACtEF,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC,CAAC;IACF,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACd,MAAM,EAAAD,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBF,KAAK,KAAI,sBAAsB;EAC7D;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,SAAS,GAAG,MAAOP,QAAQ,IAAK;EAC3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,QAAQ,EAAEF,QAAQ,CAAC;IACnD,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAI,gBAAA;IACd,MAAM,EAAAA,gBAAA,GAAAJ,KAAK,CAACH,QAAQ,cAAAO,gBAAA,uBAAdA,gBAAA,CAAgBL,IAAI,KAAI,cAAc;EAC9C;AACF,CAAC;AAED,eAAeR,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}